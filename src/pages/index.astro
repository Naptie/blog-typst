---
import { getCollection } from "astro:content";

import { TagList } from "@myriaddreamin/tylant";
import { renderComment } from "@myriaddreamin/tylant";

import {
  ArchiveList,
  BaseHead,
  Footer,
  FormattedDate,
  Header,
  RecentComment,
} from "$components";
import {
  kSiteTitle,
  kSiteIndexTitle,
  kSiteDescription,
  kCommentList,
  kUrlBase,
  kBaiduVeriCode,
  kEnableArchive,
} from "$consts";
// @ts-ignore
import AboutContent from "../../content/other/about.typ?html&body";

import "$styles/IndexPostList.css";

const pdfArchives = await getCollection("archive");
const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const recent5Posts = posts.slice(0, 5);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={kSiteTitle} description={kSiteDescription} />
    <!-- Baidu -->
    {
      kBaiduVeriCode && (
        <meta name="baidu-site-verification" content={kBaiduVeriCode} />
      )
    }

    <style>
      .comments a {
        display: inline-block;
      }
      @media (max-width: 600px) {
        .posts .heading {
          display: flex;
          flex-direction: column;
        }
      }
      .comment-item {
        background-color: var(--main-bg-color);
      }
      .monthly li {
        font-style: italic;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section aria-label="Prelude">
        <h1 set:html={kSiteIndexTitle} />
        <AboutContent />
      </section>
      <section aria-label="Recent Posts">
        <h2>Recent Posts</h2>
        <ul class="accent block-list posts">
          {
            recent5Posts.map((post) => (
              <li>
                <a class="heading" href={`${kUrlBase}/article/${post.id}/`}>
                  <h2>
                    <span class="title">{post.data.title}</span>
                  </h2>
                  <span class="date">
                    <FormattedDate date={post.data.date} />
                  </span>
                </a>
                {post.data.tags && <TagList tags={post.data.tags} />}
                {post.data.description || ""}
              </li>
            ))
          }
        </ul>
      </section>
      <RecentComment kCommentList={kCommentList} renderComment={renderComment}>
        <fragment slot="articleRef">
          {
            (id: string) => (
              <a class="heading" href={`${kUrlBase}/article/${id}`}>
                {posts.find((post) => post.id === id)?.data.title || ""}
              </a>
            )
          }
        </fragment>
      </RecentComment>

      {kEnableArchive && <ArchiveList pdfArchives={pdfArchives} />}
    </main>
    <Footer />
  </body>
</html>
